// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBuffersSetup.Gameplay
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ClueTextSettings : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static ClueTextSettings GetRootAsClueTextSettings(ByteBuffer _bb) { return GetRootAsClueTextSettings(_bb, new ClueTextSettings()); }
  public static ClueTextSettings GetRootAsClueTextSettings(ByteBuffer _bb, ClueTextSettings obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ClueTextSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string TypeId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetTypeIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTypeIdArray() { return __p.__vector_as_array<byte>(4); }
  public string MessageLid { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageLidBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMessageLidBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMessageLidArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<FlatBuffersSetup.Gameplay.ClueTextSettings> CreateClueTextSettings(FlatBufferBuilder builder,
      StringOffset typeIdOffset = default(StringOffset),
      StringOffset messageLidOffset = default(StringOffset)) {
    builder.StartTable(2);
    ClueTextSettings.AddMessageLid(builder, messageLidOffset);
    ClueTextSettings.AddTypeId(builder, typeIdOffset);
    return ClueTextSettings.EndClueTextSettings(builder);
  }

  public static void StartClueTextSettings(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTypeId(FlatBufferBuilder builder, StringOffset typeIdOffset) { builder.AddOffset(0, typeIdOffset.Value, 0); }
  public static void AddMessageLid(FlatBufferBuilder builder, StringOffset messageLidOffset) { builder.AddOffset(1, messageLidOffset.Value, 0); }
  public static Offset<FlatBuffersSetup.Gameplay.ClueTextSettings> EndClueTextSettings(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBuffersSetup.Gameplay.ClueTextSettings>(o);
  }
  public ClueTextSettingsT UnPack() {
    var _o = new ClueTextSettingsT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ClueTextSettingsT _o) {
    _o.TypeId = this.TypeId;
    _o.MessageLid = this.MessageLid;
  }
  public static Offset<FlatBuffersSetup.Gameplay.ClueTextSettings> Pack(FlatBufferBuilder builder, ClueTextSettingsT _o) {
    if (_o == null) return default(Offset<FlatBuffersSetup.Gameplay.ClueTextSettings>);
    var _typeId = _o.TypeId == null ? default(StringOffset) : builder.CreateString(_o.TypeId);
    var _messageLid = _o.MessageLid == null ? default(StringOffset) : builder.CreateString(_o.MessageLid);
    return CreateClueTextSettings(
      builder,
      _typeId,
      _messageLid);
  }
}

public class ClueTextSettingsT
{
  public string TypeId { get; set; }
  public string MessageLid { get; set; }

  public ClueTextSettingsT() {
    this.TypeId = null;
    this.MessageLid = null;
  }
}


static public class ClueTextSettingsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*TypeId*/, false)
      && verifier.VerifyString(tablePos, 6 /*MessageLid*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
